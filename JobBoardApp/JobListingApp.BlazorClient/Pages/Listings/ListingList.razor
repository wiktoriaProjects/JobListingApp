@* @page "/listing"
@using JobListingApp.SharedKernel.Dto
<PageTitle>Job listings</PageTitle>
<h1>Job offers</h1>
<div class="row">
 @foreach (var l in _listingList)
 {
 <div class="card m-2" style="width: 18rem;">
 <img class="card-img-top" src="..." alt="Card image cap">
 <div class="card-body">
 <h5 class="card-title">@l.Title</h5>
 <p class="card-text">@l.Description</p>
 <p class="card-text">@l.Company</p>
 <p class="card-text">@l.Location</p>
 <a href="#" class="btn btn-primary">Add to saved</a>
 </div>
 </div>
 }
</div>
@code {
 private List<ListingDto> _listingList = new List<ListingDto>()
 {
 new ListingDto() { Title = "Dev", Company = "Meta", Description = "Gooddkk", Location = "LA" },

 };
 public class ListingDto
 {
 public string Title { get; set; }
 public string Description { get; set; }
 public string Company { get; set; }
 public string Location { get; set; }
 }
} 
 *@
 @page "/listing"
@inherits LayoutComponentBase
@inject IListingService _listingService
@inject ILikesService _likesService
@inject NavigationManager NavigationManager

<PageTitle>Job Listings</PageTitle>
<h1>Job Offers</h1>

<div class="row">
    @foreach (var listing in _listingList)
    {
        <div class="job-item card mb-3"> 
             <EditForm Model="@listing" onclick="@(() => AddToLiked(@listing))">
                <td>
                    <img src="@listing.ImageUrl" width="100">
                </td>
                @* <img class="card-img-top" src="@listing.ImageUrl" alt="Card image cap"> *@
                
                <div class="card-body">
                    <h5 class="card-title">@listing.Title</h5>
                    @* <p class="card-text">@listing.Description</p> *@
                    <p class="card-text">Company: @listing.Company</p>
                    <p class="card-text">Location: @listing.Location</p>

                    <button type="submit" class="btn btn-primary">Save</button>
                    <button type="button" class="btn btn-primary" @onclick="() => NavigateToListing(listing.Id)">Apply</button>
                </div>
             </EditForm> 

        </div>
    }
</div>

@code {
    public int Count { get; set; } = 1;
    private IEnumerable<ListingDto> _listingList = new List<ListingDto>();
    protected override async Task OnInitializedAsync()
    {
        _listingList = await _listingService.GetAll();
    }
    private async Task AddToLiked(ListingDto l)
    {
        LikedListing likedListing = new LikedListing()
            {
                Listing = l,
                Count = Count,
            };
            await _likesService.Add(likedListing);
            Count = 1;
    }
    private void NavigateToListing(int listingId)
    {
        NavigationManager.NavigateTo($"/listings/{listingId}");
    }
    // private List<ListingDto> _listingList = new List<ListingDto>()
    // {
    //     new ListingDto() { Title = "Software Engineer", Company = "Tech Corp", Description = "Developing new software solutions", Location = "San Francisco" },
    //     new ListingDto() { Title = "Data Analyst", Company = "Data Insights", Description = "Analyzing data trends and patterns", Location = "New York" },
    //     new ListingDto() { Title = "UX/UI Designer", Company = "Design Studio", Description = "Creating intuitive user interfaces", Location = "Los Angeles" },
    // };

    
}
